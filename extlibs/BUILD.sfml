load("@rules_cc//cc:defs.bzl", "cc_library")

cc_library(
    name = "stb",
    hdrs = glob([
        "extlibs/headers/stb_image/stb_image.h",
        "extlibs/headers/stb_image/stb_image_write.h",
    ]),
    strip_include_prefix = "extlibs/headers/stb_image/",
)

cc_library(
    name = "ft2",
    srcs = select({
        "@platforms//os:windows": [
            "extlibs/libs-msvc/x64/freetype.lib",
        ],
        "@platforms//os:linux": []
    }),
    hdrs = glob([
        "extlibs/headers/freetype2/**/*.h",
    ]),
    linkopts = select({
        "@platforms//os:windows": [
        ],
        "@platforms//os:linux": [
            "-lfreetype",
        ],
    }),
    strip_include_prefix = "extlibs/headers/freetype2/",
)

cc_library(
    name = "sfml-system",
    srcs = glob([
        "src/SFML/System/*.cpp",
    ]) + select({
        "@platforms//os:windows": glob([
            "src/SFML/System/Win32/**/*.cpp",
            "src/SFML/System/Win32/**/*.hpp",
        ]),
        "@platforms//os:linux": glob([
            "src/SFML/System/Unix/**/*.cpp",
            "src/SFML/System/Unix/**/*.hpp",
        ]),
    }),
    hdrs = glob([
        "include/SFML/*.hpp",
        "include/SFML/System/**/*.hpp",
        "include/SFML/System/**/*.inl",
    ]),
    copts = ["-Iexternal/sfml/src/"],
    defines = ["SFML_STATIC"],
    linkopts = select({
        "@platforms//os:windows": [
            "-DEFAULTLIB:winmm",
        ],
        "@platforms//os:linux": [
            "-ludev",
            "-pthread",
        ],
    }),
    strip_include_prefix = "include/",
    visibility = ["//visibility:public"],
)

cc_library(
    name = "sfml-window",
    srcs = glob(
        [
            "src/SFML/Window/*.cpp",
            "src/SFML/Window/*.hpp",
        ],
        exclude = [
            "src/SFML/Window/EglContext.cpp",
            "src/SFML/Window/EglContext.hpp",
            "src/SFML/Window/EGLCheck.cpp",
            "src/SFML/Window/EGLCheck.hpp",
        ],
    ) + select({
        "@platforms//os:windows": glob([
            "src/SFML/Window/Win32/**/*.cpp",
            "src/SFML/Window/Win32/**/*.hpp",
        ]),
        "@platforms//os:linux": glob([
            "src/SFML/Window/Unix/**/*.cpp",
            "src/SFML/Window/Unix/**/*.hpp",
        ]),
    }),
    hdrs = glob([
        "include/SFML/Window/**/*",
    ]),
    copts = ["-Iexternal/sfml/src/"],
    defines = [
        "SFML_STATIC",
        "UNICODE",
        "_UNICODE",
    ],
    linkopts = select({
        "@platforms//os:windows": [
            "-DEFAULTLIB:advapi32",
            "-DEFAULTLIB:gdi32",
            "-DEFAULTLIB:opengl32",
            "-DEFAULTLIB:user32",
            "-DEFAULTLIB:winmm",
        ],
        "@platforms//os:linux": [
            "-lGL",
            "-lX11",
            "-lXrandr",
            "-ludev",
        ],
    }),
    strip_include_prefix = "include/",
    visibility = ["//visibility:public"],
    deps = [
        ":sfml-system",
    ],
)

cc_library(
    name = "sfml-graphics",
    srcs = glob([
        "src/SFML/Graphics/*.cpp",
        "src/SFML/Graphics/*.hpp",
    ]),
    hdrs = glob([
        "include/SFML/Graphics/**/*",
    ]),
    copts = ["-Iexternal/sfml/src/"],
    defines = ["SFML_STATIC"],
    linkopts = select({
        "@platforms//os:windows": [
            "-DEFAULTLIB:opengl32",
        ],
        "@platforms//os:linux": [
            "-lGL",
            "-ludev",
            "-pthread",
        ],
    }),
    strip_include_prefix = "include/",
    visibility = ["//visibility:public"],
    deps = [
        ":ft2",
        ":sfml-window",
        ":sfml-system",
        ":stb",
    ],
)
